{"ast":null,"code":"var _jsxFileName = \"D:\\\\DroneTelemetryDashboard\\\\frontend\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Box } from '@mui/material';\nimport TopBar from '../components/TopBar';\nimport TelemetryPanel from '../components/TelemetryPanel';\nimport MapView from '../components/MapView';\nimport { subscribeToTelemetry } from '../api/socket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [telemetry, setTelemetry] = useState(null);\n  useEffect(() => {\n    const unsubscribe = subscribeToTelemetry(incoming => {\n      console.log('ðŸ“¡ Received telemetry:', incoming);\n      setTelemetry(incoming);\n    });\n    return () => unsubscribe();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      backgroundColor: '#0f172a',\n      height: '100vh',\n      overflow: 'hidden'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TopBar, {\n      telemetry: telemetry\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        height: 'calc(100vh - 64px)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: '500px',\n          overflowY: 'auto',\n          borderRight: '1px solid #1e293b'\n        },\n        children: /*#__PURE__*/_jsxDEV(TelemetryPanel, {\n          telemetry: telemetry\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          flexGrow: 1,\n          p: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(MapView, {\n          telemetry: telemetry\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"o6UYQrdCH2kTZqzgv9VncOWwEjQ=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","Box","TopBar","TelemetryPanel","MapView","subscribeToTelemetry","jsxDEV","_jsxDEV","Home","_s","telemetry","setTelemetry","unsubscribe","incoming","console","log","sx","backgroundColor","height","overflow","children","fileName","_jsxFileName","lineNumber","columnNumber","display","width","overflowY","borderRight","flexGrow","p","_c","$RefreshReg$"],"sources":["D:/DroneTelemetryDashboard/frontend/src/pages/Home.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Box } from '@mui/material';\r\nimport TopBar from '../components/TopBar';\r\nimport TelemetryPanel from '../components/TelemetryPanel';\r\nimport MapView from '../components/MapView';\r\nimport { subscribeToTelemetry } from '../api/socket';\r\n\r\nconst Home = () => {\r\n  const [telemetry, setTelemetry] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = subscribeToTelemetry((incoming) => {\r\n      console.log('ðŸ“¡ Received telemetry:', incoming);\r\n      setTelemetry(incoming);\r\n    });\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  return (\r\n    <Box sx={{ backgroundColor: '#0f172a', height: '100vh', overflow: 'hidden' }}>\r\n      <TopBar telemetry={telemetry} />\r\n      \r\n      {/* Body Layout */}\r\n      <Box sx={{ display: 'flex', height: 'calc(100vh - 64px)' }}>\r\n        \r\n        {/* Telemetry Panel on Left */}\r\n        <Box sx={{ width: '500px', overflowY: 'auto', borderRight: '1px solid #1e293b' }}>\r\n          <TelemetryPanel telemetry={telemetry} />\r\n        </Box>\r\n\r\n        {/* MapView on Right */}\r\n        <Box sx={{ flexGrow: 1, p: 2 }}>\r\n          <MapView telemetry={telemetry} />\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,GAAG,QAAQ,eAAe;AACnC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,cAAc,MAAM,8BAA8B;AACzD,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,SAASC,oBAAoB,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACd,MAAMa,WAAW,GAAGP,oBAAoB,CAAEQ,QAAQ,IAAK;MACrDC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEF,QAAQ,CAAC;MAC/CF,YAAY,CAACE,QAAQ,CAAC;IACxB,CAAC,CAAC;IACF,OAAO,MAAMD,WAAW,CAAC,CAAC;EAC5B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA,CAACN,GAAG;IAACe,EAAE,EAAE;MAAEC,eAAe,EAAE,SAAS;MAAEC,MAAM,EAAE,OAAO;MAAEC,QAAQ,EAAE;IAAS,CAAE;IAAAC,QAAA,gBAC3Eb,OAAA,CAACL,MAAM;MAACQ,SAAS,EAAEA;IAAU;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAGhCjB,OAAA,CAACN,GAAG;MAACe,EAAE,EAAE;QAAES,OAAO,EAAE,MAAM;QAAEP,MAAM,EAAE;MAAqB,CAAE;MAAAE,QAAA,gBAGzDb,OAAA,CAACN,GAAG;QAACe,EAAE,EAAE;UAAEU,KAAK,EAAE,OAAO;UAAEC,SAAS,EAAE,MAAM;UAAEC,WAAW,EAAE;QAAoB,CAAE;QAAAR,QAAA,eAC/Eb,OAAA,CAACJ,cAAc;UAACO,SAAS,EAAEA;QAAU;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC,eAGNjB,OAAA,CAACN,GAAG;QAACe,EAAE,EAAE;UAAEa,QAAQ,EAAE,CAAC;UAAEC,CAAC,EAAE;QAAE,CAAE;QAAAV,QAAA,eAC7Bb,OAAA,CAACH,OAAO;UAACM,SAAS,EAAEA;QAAU;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACf,EAAA,CA9BID,IAAI;AAAAuB,EAAA,GAAJvB,IAAI;AAgCV,eAAeA,IAAI;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}