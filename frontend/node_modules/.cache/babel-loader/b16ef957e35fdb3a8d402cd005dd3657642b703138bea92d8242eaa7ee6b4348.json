{"ast":null,"code":"var _jsxFileName = \"D:\\\\DroneTelemetryDashboard\\\\frontend\\\\src\\\\components\\\\MapView.js\";\n// src/components/MapView.js\nimport React from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport { Box, Typography, Card, CardContent, Stack, Chip } from '@mui/material';\nimport L from 'leaflet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst droneIcon = new L.Icon({\n  iconUrl: 'https://cdn-icons-png.flaticon.com/512/149/149060.png',\n  iconSize: [40, 40],\n  iconAnchor: [20, 40]\n});\n\n// Utility function to set chip color based on connection status\nconst getSignalColor = status => {\n  if (status === 'Strong') return 'success';\n  if (status === 'Weak') return 'warning';\n  if (status === 'Lost') return 'error';\n  return 'default';\n};\nconst MapView = ({\n  gps\n}) => {\n  const lat = (gps === null || gps === void 0 ? void 0 : gps.lat) || 0;\n  const lon = (gps === null || gps === void 0 ? void 0 : gps.lon) || 0;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      flexDirection: 'column',\n      gap: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      color: \"primary\",\n      children: \"\\uD83D\\uDCCA Telemetry Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 2,\n      alignItems: \"center\",\n      justifyContent: \"flex-start\",\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          width: '100%',\n          borderRadius: 2,\n          boxShadow: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            color: \"primary\",\n            sx: {\n              mb: 1\n            },\n            children: \"\\uD83D\\uDCCD GPS Coordinates\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            color: \"text.secondary\",\n            children: [\"Lat: \", lat.toFixed(4), \", Lon: \", lon.toFixed(4)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          width: '100%',\n          borderRadius: 2,\n          boxShadow: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            color: \"primary\",\n            sx: {\n              mb: 1\n            },\n            children: \"\\uD83D\\uDCE1 Connection Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Chip, {\n            label: (gps === null || gps === void 0 ? void 0 : gps.connection) || 'No Signal',\n            color: getSignalColor(gps === null || gps === void 0 ? void 0 : gps.connection),\n            sx: {\n              width: '75%',\n              textAlign: 'center'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        height: '400px',\n        borderRadius: 2,\n        overflow: 'hidden',\n        boxShadow: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        color: \"primary\",\n        sx: {\n          mb: 1\n        },\n        children: \"\\uD83D\\uDDFA\\uFE0F Drone Live GPS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: [lat, lon],\n        zoom: 25,\n        scrollWheelZoom: true,\n        style: {\n          height: '100%',\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/\\\">OpenStreetMap</a>\",\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Marker, {\n          position: [lat, lon],\n          icon: droneIcon,\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: [\"Drone Position \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 30\n            }, this), \" Lat: \", lat.toFixed(4), \", Lon: \", lon.toFixed(4)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_c = MapView;\nexport default MapView;\nvar _c;\n$RefreshReg$(_c, \"MapView\");","map":{"version":3,"names":["React","MapContainer","TileLayer","Marker","Popup","Box","Typography","Card","CardContent","Stack","Chip","L","jsxDEV","_jsxDEV","droneIcon","Icon","iconUrl","iconSize","iconAnchor","getSignalColor","status","MapView","gps","lat","lon","sx","display","flexDirection","gap","children","variant","color","fileName","_jsxFileName","lineNumber","columnNumber","spacing","alignItems","justifyContent","width","borderRadius","boxShadow","mb","toFixed","label","connection","textAlign","height","overflow","center","zoom","scrollWheelZoom","style","attribution","url","position","icon","_c","$RefreshReg$"],"sources":["D:/DroneTelemetryDashboard/frontend/src/components/MapView.js"],"sourcesContent":["// src/components/MapView.js\r\nimport React from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport { Box, Typography, Card, CardContent, Stack, Chip } from '@mui/material';\r\nimport L from 'leaflet';\r\n\r\nconst droneIcon = new L.Icon({\r\n  iconUrl: 'https://cdn-icons-png.flaticon.com/512/149/149060.png',\r\n  iconSize: [40, 40],\r\n  iconAnchor: [20, 40],\r\n});\r\n\r\n// Utility function to set chip color based on connection status\r\nconst getSignalColor = (status) => {\r\n  if (status === 'Strong') return 'success';\r\n  if (status === 'Weak') return 'warning';\r\n  if (status === 'Lost') return 'error';\r\n  return 'default';\r\n};\r\n\r\nconst MapView = ({ gps }) => {\r\n  const lat = gps?.lat || 0;\r\n  const lon = gps?.lon || 0;\r\n\r\n  return (\r\n    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 3 }}>\r\n      <Typography variant=\"h5\" color=\"primary\">\r\n        üìä Telemetry Data\r\n      </Typography>\r\n\r\n      <Stack spacing={2} alignItems=\"center\" justifyContent=\"flex-start\">\r\n        <Card sx={{ width: '100%', borderRadius: 2, boxShadow: 3 }}>\r\n          <CardContent>\r\n            <Typography variant=\"h6\" color=\"primary\" sx={{ mb: 1 }}>\r\n              üìç GPS Coordinates\r\n            </Typography>\r\n            <Typography variant=\"body1\" color=\"text.secondary\">\r\n              Lat: {lat.toFixed(4)}, Lon: {lon.toFixed(4)}\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card sx={{ width: '100%', borderRadius: 2, boxShadow: 3 }}>\r\n          <CardContent>\r\n            <Typography variant=\"h6\" color=\"primary\" sx={{ mb: 1 }}>\r\n              üì° Connection Status\r\n            </Typography>\r\n            <Chip\r\n              label={gps?.connection || 'No Signal'}\r\n              color={getSignalColor(gps?.connection)}\r\n              sx={{ width: '75%', textAlign: 'center' }}\r\n            />\r\n          </CardContent>\r\n        </Card>\r\n      </Stack>\r\n\r\n      <Box sx={{ height: '400px', borderRadius: 2, overflow: 'hidden', boxShadow: 3 }}>\r\n        <Typography variant=\"h6\" color=\"primary\" sx={{ mb: 1 }}>\r\n          üó∫Ô∏è Drone Live GPS\r\n        </Typography>\r\n        <MapContainer\r\n          center={[lat, lon]}\r\n          zoom={25}\r\n          scrollWheelZoom={true}\r\n          style={{ height: '100%', width: '100%' }}\r\n        >\r\n          <TileLayer\r\n            attribution='¬© <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a>'\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          />\r\n          <Marker position={[lat, lon]} icon={droneIcon}>\r\n            <Popup>\r\n              Drone Position <br /> Lat: {lat.toFixed(4)}, Lon: {lon.toFixed(4)}\r\n            </Popup>\r\n          </Marker>\r\n        </MapContainer>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MapView;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}