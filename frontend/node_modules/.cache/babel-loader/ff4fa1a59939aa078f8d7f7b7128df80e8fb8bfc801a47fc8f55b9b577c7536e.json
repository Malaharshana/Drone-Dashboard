{"ast":null,"code":"var _jsxFileName = \"D:\\\\DroneTelemetryDashboard\\\\frontend\\\\src\\\\components\\\\BootScreen.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { motion } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst bootSequence = ['Initializing Drone Command HQ...', 'Powering up sensors...', 'Loading Telemetry Core...', 'Establishing satellite uplink...', 'Activating visual interface...', 'System check complete...', 'Welcome, Commander.'];\nconst BootScreen = ({\n  onComplete\n}) => {\n  _s();\n  const [allLinesDone, setAllLinesDone] = useState(false);\n  const audioRef = useRef(null);\n  useEffect(() => {\n    const delayPerLine = 500; // ms\n    const totalLineDuration = bootSequence.length * delayPerLine;\n\n    // Create audio once\n    audioRef.current = new Audio('/sounds/boot.mp3');\n    audioRef.current.volume = 0.7;\n    const transitionTimer = setTimeout(() => {\n      setAllLinesDone(true);\n\n      // Play audio\n      if (audioRef.current) {\n        audioRef.current.play().catch(err => {\n          console.error('Autoplay failed:', err);\n        });\n      }\n\n      // Go to dashboard after 1s sound\n      setTimeout(() => {\n        onComplete();\n      }, 1000);\n    }, totalLineDuration + 500);\n    return () => {\n      clearTimeout(transitionTimer);\n      if (audioRef.current) {\n        audioRef.current.pause();\n        audioRef.current = null;\n      }\n    };\n  }, [onComplete]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: 'black',\n      color: '#00ffe0',\n      fontFamily: 'Orbitron, monospace',\n      fontSize: '1.2rem',\n      height: '100vh',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      paddingLeft: '5vw',\n      overflow: 'hidden'\n    },\n    children: [bootSequence.map((line, index) => /*#__PURE__*/_jsxDEV(motion.div, {\n      initial: {\n        opacity: 0,\n        x: -50\n      },\n      animate: {\n        opacity: 1,\n        x: 0\n      },\n      transition: {\n        delay: index * 0.5,\n        duration: 0.4\n      },\n      style: {\n        marginBottom: '0.8rem',\n        textShadow: '0 0 8px cyan'\n      },\n      children: line\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)), allLinesDone && /*#__PURE__*/_jsxDEV(motion.div, {\n      initial: {\n        opacity: 0\n      },\n      animate: {\n        opacity: 1\n      },\n      transition: {\n        duration: 0.8\n      },\n      style: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100vw',\n        height: '100vh',\n        backgroundColor: 'black',\n        zIndex: 10\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(BootScreen, \"LniXXCAPWYuKo4zM7+9doNx+RxE=\");\n_c = BootScreen;\nexport default BootScreen;\nvar _c;\n$RefreshReg$(_c, \"BootScreen\");","map":{"version":3,"names":["React","useEffect","useState","useRef","motion","jsxDEV","_jsxDEV","bootSequence","BootScreen","onComplete","_s","allLinesDone","setAllLinesDone","audioRef","delayPerLine","totalLineDuration","length","current","Audio","volume","transitionTimer","setTimeout","play","catch","err","console","error","clearTimeout","pause","style","backgroundColor","color","fontFamily","fontSize","height","display","flexDirection","justifyContent","paddingLeft","overflow","children","map","line","index","div","initial","opacity","x","animate","transition","delay","duration","marginBottom","textShadow","fileName","_jsxFileName","lineNumber","columnNumber","position","top","left","width","zIndex","_c","$RefreshReg$"],"sources":["D:/DroneTelemetryDashboard/frontend/src/components/BootScreen.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst bootSequence = [\r\n  'Initializing Drone Command HQ...',\r\n  'Powering up sensors...',\r\n  'Loading Telemetry Core...',\r\n  'Establishing satellite uplink...',\r\n  'Activating visual interface...',\r\n  'System check complete...',\r\n  'Welcome, Commander.',\r\n];\r\n\r\nconst BootScreen = ({ onComplete }) => {\r\n  const [allLinesDone, setAllLinesDone] = useState(false);\r\n  const audioRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const delayPerLine = 500; // ms\r\n    const totalLineDuration = bootSequence.length * delayPerLine;\r\n\r\n    // Create audio once\r\n    audioRef.current = new Audio('/sounds/boot.mp3');\r\n    audioRef.current.volume = 0.7;\r\n\r\n    const transitionTimer = setTimeout(() => {\r\n      setAllLinesDone(true);\r\n\r\n      // Play audio\r\n      if (audioRef.current) {\r\n        audioRef.current.play().catch(err => {\r\n          console.error('Autoplay failed:', err);\r\n        });\r\n      }\r\n\r\n      // Go to dashboard after 1s sound\r\n      setTimeout(() => {\r\n        onComplete();\r\n      }, 1000);\r\n    }, totalLineDuration + 500);\r\n\r\n    return () => {\r\n      clearTimeout(transitionTimer);\r\n      if (audioRef.current) {\r\n        audioRef.current.pause();\r\n        audioRef.current = null;\r\n      }\r\n    };\r\n  }, [onComplete]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundColor: 'black',\r\n        color: '#00ffe0',\r\n        fontFamily: 'Orbitron, monospace',\r\n        fontSize: '1.2rem',\r\n        height: '100vh',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        paddingLeft: '5vw',\r\n        overflow: 'hidden',\r\n      }}\r\n    >\r\n      {bootSequence.map((line, index) => (\r\n        <motion.div\r\n          key={index}\r\n          initial={{ opacity: 0, x: -50 }}\r\n          animate={{ opacity: 1, x: 0 }}\r\n          transition={{ delay: index * 0.5, duration: 0.4 }}\r\n          style={{ marginBottom: '0.8rem', textShadow: '0 0 8px cyan' }}\r\n        >\r\n          {line}\r\n        </motion.div>\r\n      ))}\r\n\r\n      {allLinesDone && (\r\n        <motion.div\r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: 1 }}\r\n          transition={{ duration: 0.8 }}\r\n          style={{\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            width: '100vw',\r\n            height: '100vh',\r\n            backgroundColor: 'black',\r\n            zIndex: 10,\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BootScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}