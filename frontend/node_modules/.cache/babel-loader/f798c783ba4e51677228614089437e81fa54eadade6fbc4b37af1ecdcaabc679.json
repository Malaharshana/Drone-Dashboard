{"ast":null,"code":"var _jsxFileName = \"D:\\\\DroneTelemetryDashboard\\\\frontend\\\\src\\\\components\\\\TelemetryPanel.js\";\nimport '../styles/telemetry.css';\nimport React from 'react';\nimport { motion } from 'framer-motion';\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport { Box, Card, CardContent, Typography, Stack } from '@mui/material';\nimport { LineChart, Line, XAxis, YAxis, Tooltip, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TelemetryPanel = ({\n  telemetry,\n  chartData\n}) => {\n  var _chartData$batteryHis, _telemetry$gps, _chartData$batteryHis2, _telemetry$gps2;\n  if (!telemetry) return /*#__PURE__*/_jsxDEV(Typography, {\n    color: \"gray\",\n    children: \"Waiting for telemetry...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 26\n  }, this);\n  const {\n    battery,\n    temperature,\n    altitude,\n    roll,\n    pitch,\n    yaw\n  } = telemetry;\n  const {\n    batteryHistory = [],\n    temperatureHistory = [],\n    altitudeHistory = [],\n    imuHistory = []\n  } = chartData || {};\n  const Graph = ({\n    data,\n    lines,\n    yDomain\n  }) => /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n    width: \"100%\",\n    height: 150,\n    children: /*#__PURE__*/_jsxDEV(LineChart, {\n      data: data,\n      children: [/*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"time\",\n        hide: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n        domain: yDomain\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), lines.map((line, index) => /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: line.key,\n        stroke: line.color,\n        strokeWidth: 2,\n        dot: false\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n  const GaugeWithGraph = ({\n    title,\n    icon,\n    value,\n    max,\n    unit,\n    color,\n    graphLines,\n    data,\n    yDomain\n  }) => /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      width: '100%',\n      maxWidth: 500\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        color: \"primary\",\n        sx: {\n          mb: 2\n        },\n        children: [icon, \" \", title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        spacing: 3,\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: 120\n          },\n          children: /*#__PURE__*/_jsxDEV(CircularProgressbar, {\n            value: value / max * 100,\n            text: `${value.toFixed(1)}${unit}`,\n            styles: buildStyles({\n              pathColor: color,\n              textColor: '#fff',\n              trailColor: '#222',\n              textSize: '14px'\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            flexGrow: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(Graph, {\n            data: data,\n            lines: graphLines,\n            yDomain: yDomain\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n  const getBatteryAlert = value => {\n    return value < 3.7 ? '⚠️ Battery Critical!' : null;\n  };\n  const getGPSAlert = (prevLat, newLat, prevLon, newLon) => {\n    if (!prevLat || !newLat || !prevLon || !newLon) return null;\n    const latDiff = Math.abs(prevLat - newLat);\n    const lonDiff = Math.abs(prevLon - newLon);\n    return latDiff < 0.0001 && lonDiff < 0.0001 ? '📡 Lost Signal: Attempting Reconnect…' : null;\n  };\n  const getIMUAlert = yawHistory => {\n    if (!yawHistory || yawHistory.length < 3) return null;\n    const recentYaw = yawHistory.slice(-3).map(d => d.yaw);\n    const deltas = recentYaw.slice(1).map((val, i) => Math.abs(val - recentYaw[i]));\n    const isErratic = deltas.some(delta => delta > 90);\n    return isErratic ? '⚠️ Instability Detected' : null;\n  };\n  const batteryAlert = telemetry ? getBatteryAlert(telemetry.battery) : null;\n  const gpsAlert = telemetry && chartData.batteryHistory.length > 1 ? getGPSAlert((_chartData$batteryHis = chartData.batteryHistory[chartData.batteryHistory.length - 2]) === null || _chartData$batteryHis === void 0 ? void 0 : _chartData$batteryHis.lat, (_telemetry$gps = telemetry.gps) === null || _telemetry$gps === void 0 ? void 0 : _telemetry$gps.lat, (_chartData$batteryHis2 = chartData.batteryHistory[chartData.batteryHistory.length - 2]) === null || _chartData$batteryHis2 === void 0 ? void 0 : _chartData$batteryHis2.lon, (_telemetry$gps2 = telemetry.gps) === null || _telemetry$gps2 === void 0 ? void 0 : _telemetry$gps2.lon) : null;\n  const imuAlert = getIMUAlert(chartData.imuHistory);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      height: 'calc(100vh - 64px)',\n      overflowY: 'auto',\n      px: 2,\n      py: 2,\n      scrollbarWidth: 'none',\n      '&::-webkit-scrollbar': {\n        display: 'none'\n      }\n    },\n    children: /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 2,\n      alignItems: \"center\",\n      justifyContent: \"flex-start\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        color: \"primary\",\n        sx: {\n          mb: 1\n        },\n        children: \"\\uD83D\\uDCCA Telemetry Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hud-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"hud-title\",\n          children: \"Battery\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GaugeWithGraph, {\n          title: \"Battery\",\n          icon: \"\\uD83D\\uDD0B\",\n          value: battery,\n          max: 12,\n          unit: \"V\",\n          color: battery < 3.7 ? '#f44336' : battery < 7 ? '#ff9800' : '#1976d2',\n          graphLines: [{\n            key: 'value',\n            color: '#1976d2'\n          }],\n          data: batteryHistory,\n          yDomain: [0, 12]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GaugeWithGraph, {\n        title: \"Battery\",\n        icon: \"\\uD83D\\uDD0B\",\n        value: battery,\n        max: 12,\n        unit: \"V\",\n        color: battery < 3.7 ? '#f44336' : battery < 7 ? '#ff9800' : '#1976d2',\n        graphLines: [{\n          key: 'value',\n          color: '#1976d2'\n        }],\n        data: batteryHistory,\n        yDomain: [0, 12]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GaugeWithGraph, {\n        title: \"Temperature\",\n        icon: \"\\uD83C\\uDF21\\uFE0F\",\n        value: temperature,\n        max: 100,\n        unit: \"\\xB0C\",\n        color: temperature > 70 ? '#f44336' : temperature > 50 ? '#ff9800' : '#1976d2',\n        graphLines: [{\n          key: 'value',\n          color: '#ff9800'\n        }],\n        data: temperatureHistory,\n        yDomain: [0, 100]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GaugeWithGraph, {\n        title: \"Altitude\",\n        icon: \"\\uD83E\\uDDED\",\n        value: altitude,\n        max: 1000,\n        unit: \"m\",\n        color: \"#4caf50\",\n        graphLines: [{\n          key: 'value',\n          color: '#4caf50'\n        }],\n        data: altitudeHistory,\n        yDomain: [0, 1000]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          width: '100%',\n          maxWidth: 500\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            color: \"primary\",\n            sx: {\n              mb: 2\n            },\n            children: \"\\uD83D\\uDCC8 IMU\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Stack, {\n            direction: \"row\",\n            spacing: 3,\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Stack, {\n              spacing: 1,\n              children: [{\n                label: 'Roll',\n                value: roll,\n                color: '#00bcd4'\n              }, {\n                label: 'Pitch',\n                value: pitch,\n                color: '#8bc34a'\n              }, {\n                label: 'Yaw',\n                value: yaw,\n                color: '#ff5722'\n              }].map(({\n                label,\n                value,\n                color\n              }) => /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  width: 80,\n                  textAlign: 'center'\n                },\n                children: [/*#__PURE__*/_jsxDEV(CircularProgressbar, {\n                  value: Math.abs(value) / 180 * 100,\n                  text: `${value.toFixed(1)}°`,\n                  styles: buildStyles({\n                    pathColor: color,\n                    textColor: '#fff',\n                    trailColor: '#333',\n                    textSize: '12px'\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"caption\",\n                  color: \"gray\",\n                  children: label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 23\n                }, this)]\n              }, label, true, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                flexGrow: 1\n              },\n              children: /*#__PURE__*/_jsxDEV(Graph, {\n                data: imuHistory,\n                lines: [{\n                  key: 'roll',\n                  color: '#00bcd4'\n                }, {\n                  key: 'pitch',\n                  color: '#8bc34a'\n                }, {\n                  key: 'yaw',\n                  color: '#ff5722'\n                }],\n                yDomain: [-180, 180]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n_c = TelemetryPanel;\nexport default TelemetryPanel;\nvar _c;\n$RefreshReg$(_c, \"TelemetryPanel\");","map":{"version":3,"names":["React","motion","CircularProgressbar","buildStyles","Box","Card","CardContent","Typography","Stack","LineChart","Line","XAxis","YAxis","Tooltip","ResponsiveContainer","jsxDEV","_jsxDEV","TelemetryPanel","telemetry","chartData","_chartData$batteryHis","_telemetry$gps","_chartData$batteryHis2","_telemetry$gps2","color","children","fileName","_jsxFileName","lineNumber","columnNumber","battery","temperature","altitude","roll","pitch","yaw","batteryHistory","temperatureHistory","altitudeHistory","imuHistory","Graph","data","lines","yDomain","width","height","dataKey","hide","domain","map","line","index","type","key","stroke","strokeWidth","dot","GaugeWithGraph","title","icon","value","max","unit","graphLines","sx","maxWidth","variant","mb","direction","spacing","alignItems","text","toFixed","styles","pathColor","textColor","trailColor","textSize","flexGrow","getBatteryAlert","getGPSAlert","prevLat","newLat","prevLon","newLon","latDiff","Math","abs","lonDiff","getIMUAlert","yawHistory","length","recentYaw","slice","d","deltas","val","i","isErratic","some","delta","batteryAlert","gpsAlert","lat","gps","lon","imuAlert","overflowY","px","py","scrollbarWidth","display","justifyContent","className","label","textAlign","_c","$RefreshReg$"],"sources":["D:/DroneTelemetryDashboard/frontend/src/components/TelemetryPanel.js"],"sourcesContent":["import '../styles/telemetry.css';\r\nimport React from 'react';\r\nimport { motion } from 'framer-motion';\r\n\r\nimport {\r\n  CircularProgressbar,\r\n  buildStyles,\r\n} from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\n\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Stack,\r\n} from '@mui/material';\r\n\r\nimport {\r\n  LineChart, Line, XAxis, YAxis, Tooltip, ResponsiveContainer\r\n} from 'recharts';\r\n\r\nconst TelemetryPanel = ({ telemetry, chartData }) => {\r\n  if (!telemetry) return <Typography color=\"gray\">Waiting for telemetry...</Typography>;\r\n\r\n  const {\r\n    battery,\r\n    temperature,\r\n    altitude,\r\n    roll,\r\n    pitch,\r\n    yaw,\r\n  } = telemetry;\r\n\r\n  const {\r\n    batteryHistory = [],\r\n    temperatureHistory = [],\r\n    altitudeHistory = [],\r\n    imuHistory = [],\r\n  } = chartData || {};\r\n\r\n  const Graph = ({ data, lines, yDomain }) => (\r\n    <ResponsiveContainer width=\"100%\" height={150}>\r\n      <LineChart data={data}>\r\n        <XAxis dataKey=\"time\" hide />\r\n        <YAxis domain={yDomain} />\r\n        <Tooltip />\r\n        {lines.map((line, index) => (\r\n          <Line\r\n            key={index}\r\n            type=\"monotone\"\r\n            dataKey={line.key}\r\n            stroke={line.color}\r\n            strokeWidth={2}\r\n            dot={false}\r\n          />\r\n        ))}\r\n      </LineChart>\r\n    </ResponsiveContainer>\r\n  );\r\n\r\n  const GaugeWithGraph = ({ title, icon, value, max, unit, color, graphLines, data, yDomain }) => (\r\n    <Card sx={{ width: '100%', maxWidth: 500 }}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" color=\"primary\" sx={{ mb: 2 }}>{icon} {title}</Typography>\r\n        <Stack direction=\"row\" spacing={3} alignItems=\"center\">\r\n          <Box sx={{ width: 120 }}>\r\n            <CircularProgressbar\r\n              value={(value / max) * 100}\r\n              text={`${value.toFixed(1)}${unit}`}\r\n              styles={buildStyles({\r\n                pathColor: color,\r\n                textColor: '#fff',\r\n                trailColor: '#222',\r\n                textSize: '14px',\r\n              })}\r\n            />\r\n          </Box>\r\n          <Box sx={{ flexGrow: 1 }}>\r\n            <Graph data={data} lines={graphLines} yDomain={yDomain} />\r\n          </Box>\r\n        </Stack>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n  const getBatteryAlert = (value) => {\r\n  return value < 3.7 ? '⚠️ Battery Critical!' : null;\r\n};\r\n\r\nconst getGPSAlert = (prevLat, newLat, prevLon, newLon) => {\r\n  if (!prevLat || !newLat || !prevLon || !newLon) return null;\r\n  const latDiff = Math.abs(prevLat - newLat);\r\n  const lonDiff = Math.abs(prevLon - newLon);\r\n  return latDiff < 0.0001 && lonDiff < 0.0001 ? '📡 Lost Signal: Attempting Reconnect…' : null;\r\n};\r\n\r\nconst getIMUAlert = (yawHistory) => {\r\n  if (!yawHistory || yawHistory.length < 3) return null;\r\n  const recentYaw = yawHistory.slice(-3).map((d) => d.yaw);\r\n  const deltas = recentYaw.slice(1).map((val, i) => Math.abs(val - recentYaw[i]));\r\n  const isErratic = deltas.some((delta) => delta > 90);\r\n  return isErratic ? '⚠️ Instability Detected' : null;\r\n};\r\n\r\nconst batteryAlert = telemetry ? getBatteryAlert(telemetry.battery) : null;\r\nconst gpsAlert =\r\n  telemetry && chartData.batteryHistory.length > 1\r\n    ? getGPSAlert(\r\n        chartData.batteryHistory[chartData.batteryHistory.length - 2]?.lat,\r\n        telemetry.gps?.lat,\r\n        chartData.batteryHistory[chartData.batteryHistory.length - 2]?.lon,\r\n        telemetry.gps?.lon\r\n      )\r\n    : null;\r\nconst imuAlert = getIMUAlert(chartData.imuHistory);\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        height: 'calc(100vh - 64px)',\r\n        overflowY: 'auto',\r\n        px: 2,\r\n        py: 2,\r\n        scrollbarWidth: 'none',\r\n        '&::-webkit-scrollbar': { display: 'none' },\r\n      }}\r\n    >\r\n      <Stack spacing={2} alignItems=\"center\" justifyContent=\"flex-start\">\r\n        <Typography variant=\"h5\" color=\"primary\" sx={{ mb: 1 }}>📊 Telemetry Data</Typography>\r\n        <div className=\"hud-card\">\r\n          <h2 className=\"hud-title\">Battery</h2>\r\n            <GaugeWithGraph\r\n          title=\"Battery\"\r\n          icon=\"🔋\"\r\n          value={battery}\r\n          max={12}\r\n          unit=\"V\"\r\n          color={battery < 3.7 ? '#f44336' : battery < 7 ? '#ff9800' : '#1976d2'}\r\n          graphLines={[{ key: 'value', color: '#1976d2' }]}\r\n          data={batteryHistory}\r\n          yDomain={[0, 12]}\r\n        />\r\n  {/* Gauge + Graph */}\r\n        </div>\r\n\r\n        <GaugeWithGraph\r\n          title=\"Battery\"\r\n          icon=\"🔋\"\r\n          value={battery}\r\n          max={12}\r\n          unit=\"V\"\r\n          color={battery < 3.7 ? '#f44336' : battery < 7 ? '#ff9800' : '#1976d2'}\r\n          graphLines={[{ key: 'value', color: '#1976d2' }]}\r\n          data={batteryHistory}\r\n          yDomain={[0, 12]}\r\n        />\r\n\r\n        <GaugeWithGraph\r\n          title=\"Temperature\"\r\n          icon=\"🌡️\"\r\n          value={temperature}\r\n          max={100}\r\n          unit=\"°C\"\r\n          color={temperature > 70 ? '#f44336' : temperature > 50 ? '#ff9800' : '#1976d2'}\r\n          graphLines={[{ key: 'value', color: '#ff9800' }]}\r\n          data={temperatureHistory}\r\n          yDomain={[0, 100]}\r\n        />\r\n\r\n        <GaugeWithGraph\r\n          title=\"Altitude\"\r\n          icon=\"🧭\"\r\n          value={altitude}\r\n          max={1000}\r\n          unit=\"m\"\r\n          color=\"#4caf50\"\r\n          graphLines={[{ key: 'value', color: '#4caf50' }]}\r\n          data={altitudeHistory}\r\n          yDomain={[0, 1000]}\r\n        />\r\n\r\n        <Card sx={{ width: '100%', maxWidth: 500 }}>\r\n          <CardContent>\r\n            <Typography variant=\"h5\" color=\"primary\" sx={{ mb: 2 }}>📈 IMU</Typography>\r\n            <Stack direction=\"row\" spacing={3} alignItems=\"center\">\r\n              <Stack spacing={1}>\r\n                {[{ label: 'Roll', value: roll, color: '#00bcd4' },\r\n                  { label: 'Pitch', value: pitch, color: '#8bc34a' },\r\n                  { label: 'Yaw', value: yaw, color: '#ff5722' }].map(({ label, value, color }) => (\r\n                    <Box key={label} sx={{ width: 80, textAlign: 'center' }}>\r\n                      <CircularProgressbar\r\n                        value={(Math.abs(value) / 180) * 100}\r\n                        text={`${value.toFixed(1)}°`}\r\n                        styles={buildStyles({\r\n                          pathColor: color,\r\n                          textColor: '#fff',\r\n                          trailColor: '#333',\r\n                          textSize: '12px',\r\n                        })}\r\n                      />\r\n                      <Typography variant=\"caption\" color=\"gray\">{label}</Typography>\r\n                    </Box>\r\n                ))}\r\n              </Stack>\r\n              <Box sx={{ flexGrow: 1 }}>\r\n                <Graph\r\n                  data={imuHistory}\r\n                  lines={[\r\n                    { key: 'roll', color: '#00bcd4' },\r\n                    { key: 'pitch', color: '#8bc34a' },\r\n                    { key: 'yaw', color: '#ff5722' }\r\n                  ]}\r\n                  yDomain={[-180, 180]}\r\n                />\r\n              </Box>\r\n            </Stack>\r\n          </CardContent>\r\n        </Card>\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TelemetryPanel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}