{"ast":null,"code":"var _jsxFileName = \"D:\\\\DroneTelemetryDashboard\\\\frontend\\\\src\\\\components\\\\MapView.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/components/MapView.js\nimport React, { useEffect, useRef, useState } from 'react';\nimport { MapContainer, TileLayer, Polyline, Marker, useMap } from 'react-leaflet';\nimport L from 'leaflet';\nimport droneIconImg from '../assets/drone-icon.png';\nimport 'leaflet/dist/leaflet.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DroneMarker = ({\n  position,\n  yaw\n}) => {\n  const droneIcon = L.icon({\n    iconUrl: droneIconImg,\n    iconSize: [40, 40],\n    iconAnchor: [20, 20],\n    className: 'rotating-drone-icon'\n  });\n  return /*#__PURE__*/_jsxDEV(Marker, {\n    position: position,\n    icon: droneIcon\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c = DroneMarker;\nconst AutoPan = ({\n  position\n}) => {\n  _s();\n  const map = useMap();\n  useEffect(() => {\n    map.setView(position, map.getZoom(), {\n      animate: true\n    });\n  }, [position, map]);\n  return null;\n};\n_s(AutoPan, \"IoceErwr5KVGS9kN4RQ1bOkYMAg=\", false, function () {\n  return [useMap];\n});\n_c2 = AutoPan;\nconst MapView = ({\n  telemetry\n}) => {\n  _s2();\n  const [trail, setTrail] = useState([]);\n  const lastUpdate = useRef(Date.now());\n  useEffect(() => {\n    var _telemetry$gps, _telemetry$gps2;\n    if (!(telemetry !== null && telemetry !== void 0 && (_telemetry$gps = telemetry.gps) !== null && _telemetry$gps !== void 0 && _telemetry$gps.lat) || !(telemetry !== null && telemetry !== void 0 && (_telemetry$gps2 = telemetry.gps) !== null && _telemetry$gps2 !== void 0 && _telemetry$gps2.lon)) return;\n    const newPoint = [telemetry.gps.lat, telemetry.gps.lon];\n    const now = Date.now();\n    if (now - lastUpdate.current > 3000) {\n      setTrail(prev => [...prev.slice(-30), newPoint]);\n      lastUpdate.current = now;\n    }\n  }, [telemetry]);\n  const currentPos = telemetry !== null && telemetry !== void 0 && telemetry.gps ? [telemetry.gps.lat, telemetry.gps.lon] : [12.98, 77.6];\n  const yaw = (telemetry === null || telemetry === void 0 ? void 0 : telemetry.yaw) || 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '500px',\n      borderRadius: '12px',\n      overflow: 'hidden',\n      border: '2px solid #00f2ff',\n      boxShadow: '0 0 30px rgba(0, 255, 255, 0.5)',\n      transition: '0.3s'\n    },\n    className: \"glow-hover\",\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: currentPos,\n      zoom: 17,\n      scrollWheelZoom: false,\n      style: {\n        height: '100%',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Polyline, {\n        positions: trail,\n        color: \"lime\",\n        weight: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DroneMarker, {\n        position: currentPos,\n        yaw: yaw\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AutoPan, {\n        position: currentPos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s2(MapView, \"/Jup8eCKjra9vCvogf0GF58J6h4=\");\n_c3 = MapView;\nexport default MapView;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"DroneMarker\");\n$RefreshReg$(_c2, \"AutoPan\");\n$RefreshReg$(_c3, \"MapView\");","map":{"version":3,"names":["React","useEffect","useRef","useState","MapContainer","TileLayer","Polyline","Marker","useMap","L","droneIconImg","jsxDEV","_jsxDEV","DroneMarker","position","yaw","droneIcon","icon","iconUrl","iconSize","iconAnchor","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","AutoPan","_s","map","setView","getZoom","animate","_c2","MapView","telemetry","_s2","trail","setTrail","lastUpdate","Date","now","_telemetry$gps","_telemetry$gps2","gps","lat","lon","newPoint","current","prev","slice","currentPos","style","height","borderRadius","overflow","border","boxShadow","transition","children","center","zoom","scrollWheelZoom","width","url","positions","color","weight","_c3","$RefreshReg$"],"sources":["D:/DroneTelemetryDashboard/frontend/src/components/MapView.js"],"sourcesContent":["// src/components/MapView.js\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { MapContainer, TileLayer, Polyline, Marker, useMap } from 'react-leaflet';\r\nimport L from 'leaflet';\r\nimport droneIconImg from '../assets/drone-icon.png';\r\nimport 'leaflet/dist/leaflet.css';\r\n\r\nconst DroneMarker = ({ position, yaw }) => {\r\n  const droneIcon = L.icon({\r\n    iconUrl: droneIconImg,\r\n    iconSize: [40, 40],\r\n    iconAnchor: [20, 20],\r\n    className: 'rotating-drone-icon',\r\n  });\r\n\r\n  return (\r\n    <Marker\r\n      position={position}\r\n      icon={droneIcon}\r\n    />\r\n  );\r\n};\r\n\r\nconst AutoPan = ({ position }) => {\r\n  const map = useMap();\r\n  useEffect(() => {\r\n    map.setView(position, map.getZoom(), { animate: true });\r\n  }, [position, map]);\r\n  return null;\r\n};\r\n\r\nconst MapView = ({ telemetry }) => {\r\n  const [trail, setTrail] = useState([]);\r\n  const lastUpdate = useRef(Date.now());\r\n\r\n  useEffect(() => {\r\n    if (!telemetry?.gps?.lat || !telemetry?.gps?.lon) return;\r\n\r\n    const newPoint = [telemetry.gps.lat, telemetry.gps.lon];\r\n    const now = Date.now();\r\n\r\n    if (now - lastUpdate.current > 3000) {\r\n      setTrail((prev) => [...prev.slice(-30), newPoint]);\r\n      lastUpdate.current = now;\r\n    }\r\n  }, [telemetry]);\r\n\r\n  const currentPos = telemetry?.gps\r\n    ? [telemetry.gps.lat, telemetry.gps.lon]\r\n    : [12.98, 77.6];\r\n\r\n  const yaw = telemetry?.yaw || 0;\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        height: '500px',\r\n        borderRadius: '12px',\r\n        overflow: 'hidden',\r\n        border: '2px solid #00f2ff',\r\n        boxShadow: '0 0 30px rgba(0, 255, 255, 0.5)',\r\n        transition: '0.3s',\r\n      }}\r\n      className=\"glow-hover\"\r\n    >\r\n      <MapContainer\r\n        center={currentPos}\r\n        zoom={17}\r\n        scrollWheelZoom={false}\r\n        style={{ height: '100%', width: '100%' }}\r\n      >\r\n        <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n        <Polyline positions={trail} color=\"lime\" weight={4} />\r\n        <DroneMarker position={currentPos} yaw={yaw} />\r\n        <AutoPan position={currentPos} />\r\n      </MapContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapView;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}