{"ast":null,"code":"var _jsxFileName = \"D:\\\\DroneTelemetryDashboard\\\\frontend\\\\src\\\\components\\\\AlertsPanel.js\",\n  _s = $RefreshSig$();\n// src/components/AlertsPanel.js\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Box, Typography } from '@mui/material';\nimport { keyframes } from '@mui/system';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst flash = keyframes`\n  0% { opacity: 1; }\n  50% { opacity: 0.2; }\n  100% { opacity: 1; }\n`;\nconst AlertsPanel = ({\n  telemetry\n}) => {\n  _s();\n  const [alerts, setAlerts] = useState([]);\n  const prevYawRef = useRef(null);\n  useEffect(() => {\n    if (!telemetry) return;\n    const newAlerts = [];\n\n    // Battery critical alert\n    if (telemetry.battery < 3.7) {\n      newAlerts.push(\"‚ö†Ô∏è Battery Critical!\");\n    }\n\n    // GPS lost signal: simple check if gps is missing or lat/lon are zero\n    if (!telemetry.gps || telemetry.gps.lat === 0 || telemetry.gps.lon === 0) {\n      newAlerts.push(\"üì° Lost Signal: Attempting Reconnect‚Ä¶\");\n    }\n\n    // IMU Yaw instability: check if yaw difference exceeds threshold (45¬∞)\n    if (prevYawRef.current !== null) {\n      const diff = Math.abs(telemetry.yaw - prevYawRef.current);\n      if (diff > 45) {\n        newAlerts.push(\"‚ö†Ô∏è Instability Detected\");\n      }\n    }\n    prevYawRef.current = telemetry.yaw;\n    setAlerts(newAlerts);\n  }, [telemetry]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      mt: 2\n    },\n    children: alerts.map((alert, index) => /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      sx: {\n        color: '#f44336',\n        animation: `${flash} 1.5s infinite`,\n        mb: 1\n      },\n      children: alert\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(AlertsPanel, \"kbzSz0hXPElrhiwbWODmHBjzuMY=\");\n_c = AlertsPanel;\nexport default AlertsPanel;\nvar _c;\n$RefreshReg$(_c, \"AlertsPanel\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Box","Typography","keyframes","jsxDEV","_jsxDEV","flash","AlertsPanel","telemetry","_s","alerts","setAlerts","prevYawRef","newAlerts","battery","push","gps","lat","lon","current","diff","Math","abs","yaw","sx","mt","children","map","alert","index","variant","color","animation","mb","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/DroneTelemetryDashboard/frontend/src/components/AlertsPanel.js"],"sourcesContent":["// src/components/AlertsPanel.js\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { Box, Typography } from '@mui/material';\r\nimport { keyframes } from '@mui/system';\r\n\r\nconst flash = keyframes`\r\n  0% { opacity: 1; }\r\n  50% { opacity: 0.2; }\r\n  100% { opacity: 1; }\r\n`;\r\n\r\nconst AlertsPanel = ({ telemetry }) => {\r\n  const [alerts, setAlerts] = useState([]);\r\n  const prevYawRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (!telemetry) return;\r\n\r\n    const newAlerts = [];\r\n\r\n    // Battery critical alert\r\n    if (telemetry.battery < 3.7) {\r\n      newAlerts.push(\"‚ö†Ô∏è Battery Critical!\");\r\n    }\r\n\r\n    // GPS lost signal: simple check if gps is missing or lat/lon are zero\r\n    if (!telemetry.gps || telemetry.gps.lat === 0 || telemetry.gps.lon === 0) {\r\n      newAlerts.push(\"üì° Lost Signal: Attempting Reconnect‚Ä¶\");\r\n    }\r\n\r\n    // IMU Yaw instability: check if yaw difference exceeds threshold (45¬∞)\r\n    if (prevYawRef.current !== null) {\r\n      const diff = Math.abs(telemetry.yaw - prevYawRef.current);\r\n      if (diff > 45) {\r\n        newAlerts.push(\"‚ö†Ô∏è Instability Detected\");\r\n      }\r\n    }\r\n    prevYawRef.current = telemetry.yaw;\r\n\r\n    setAlerts(newAlerts);\r\n  }, [telemetry]);\r\n\r\n  return (\r\n    <Box sx={{ mt: 2 }}>\r\n      {alerts.map((alert, index) => (\r\n        <Typography\r\n          key={index}\r\n          variant=\"h6\"\r\n          sx={{\r\n            color: '#f44336',\r\n            animation: `${flash} 1.5s infinite`,\r\n            mb: 1,\r\n          }}\r\n        >\r\n          {alert}\r\n        </Typography>\r\n      ))}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AlertsPanel;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,GAAG,EAAEC,UAAU,QAAQ,eAAe;AAC/C,SAASC,SAAS,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,KAAK,GAAGH,SAAS;AACvB;AACA;AACA;AACA,CAAC;AAED,MAAMI,WAAW,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAMY,UAAU,GAAGb,MAAM,CAAC,IAAI,CAAC;EAE/BD,SAAS,CAAC,MAAM;IACd,IAAI,CAACU,SAAS,EAAE;IAEhB,MAAMK,SAAS,GAAG,EAAE;;IAEpB;IACA,IAAIL,SAAS,CAACM,OAAO,GAAG,GAAG,EAAE;MAC3BD,SAAS,CAACE,IAAI,CAAC,sBAAsB,CAAC;IACxC;;IAEA;IACA,IAAI,CAACP,SAAS,CAACQ,GAAG,IAAIR,SAAS,CAACQ,GAAG,CAACC,GAAG,KAAK,CAAC,IAAIT,SAAS,CAACQ,GAAG,CAACE,GAAG,KAAK,CAAC,EAAE;MACxEL,SAAS,CAACE,IAAI,CAAC,uCAAuC,CAAC;IACzD;;IAEA;IACA,IAAIH,UAAU,CAACO,OAAO,KAAK,IAAI,EAAE;MAC/B,MAAMC,IAAI,GAAGC,IAAI,CAACC,GAAG,CAACd,SAAS,CAACe,GAAG,GAAGX,UAAU,CAACO,OAAO,CAAC;MACzD,IAAIC,IAAI,GAAG,EAAE,EAAE;QACbP,SAAS,CAACE,IAAI,CAAC,yBAAyB,CAAC;MAC3C;IACF;IACAH,UAAU,CAACO,OAAO,GAAGX,SAAS,CAACe,GAAG;IAElCZ,SAAS,CAACE,SAAS,CAAC;EACtB,CAAC,EAAE,CAACL,SAAS,CAAC,CAAC;EAEf,oBACEH,OAAA,CAACJ,GAAG;IAACuB,EAAE,EAAE;MAAEC,EAAE,EAAE;IAAE,CAAE;IAAAC,QAAA,EAChBhB,MAAM,CAACiB,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACvBxB,OAAA,CAACH,UAAU;MAET4B,OAAO,EAAC,IAAI;MACZN,EAAE,EAAE;QACFO,KAAK,EAAE,SAAS;QAChBC,SAAS,EAAE,GAAG1B,KAAK,gBAAgB;QACnC2B,EAAE,EAAE;MACN,CAAE;MAAAP,QAAA,EAEDE;IAAK,GARDC,KAAK;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASA,CACb;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC5B,EAAA,CAhDIF,WAAW;AAAA+B,EAAA,GAAX/B,WAAW;AAkDjB,eAAeA,WAAW;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}