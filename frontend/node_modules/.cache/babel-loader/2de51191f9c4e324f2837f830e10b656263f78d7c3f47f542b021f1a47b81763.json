{"ast":null,"code":"var _jsxFileName = \"D:\\\\DroneTelemetryDashboard\\\\frontend\\\\src\\\\components\\\\BootScreen.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport './BootScreen.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst bootSequence = ['Initializing Drone Command HQ...', 'Powering up sensors...', 'Loading Telemetry Core...', 'Establishing satellite uplink...', 'Activating visual interface...', 'System check complete...', 'Welcome, Commander.'];\nconst BootScreen = ({\n  onComplete\n}) => {\n  _s();\n  const [displayedLines, setDisplayedLines] = useState([]);\n  const [currentLineIndex, setCurrentLineIndex] = useState(0);\n  const audioRef = useRef(null);\n  const [fadeOut, setFadeOut] = useState(false);\n  useEffect(() => {\n    audioRef.current = new Audio('/sounds/boot.mp3');\n    audioRef.current.volume = 0.7;\n    audioRef.current.load();\n    const showNextLine = () => {\n      if (currentLineIndex < bootSequence.length) {\n        setDisplayedLines(prev => [...prev, bootSequence[currentLineIndex]]);\n        setCurrentLineIndex(prev => prev + 1);\n      }\n    };\n    if (currentLineIndex < bootSequence.length) {\n      const timer = setTimeout(showNextLine, 1300); // 1.3s per line\n      return () => clearTimeout(timer);\n    } else {\n      // After all lines shown\n      const delay = setTimeout(() => {\n        setFadeOut(true);\n        audioRef.current.play().catch(err => console.warn('Autoplay blocked:', err));\n        setTimeout(() => {\n          onComplete();\n        }, 1000);\n      }, 800);\n      return () => clearTimeout(delay);\n    }\n  }, [currentLineIndex, onComplete]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"boot-screen\",\n    children: [displayedLines.map((line, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"boot-line typewriter glitch\",\n      \"data-text\": line,\n      children: line\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)), fadeOut && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fade-out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(BootScreen, \"yN8jROvCXf9NmsOUmejW42BwRVA=\");\n_c = BootScreen;\nexport default BootScreen;\nvar _c;\n$RefreshReg$(_c, \"BootScreen\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","bootSequence","BootScreen","onComplete","_s","displayedLines","setDisplayedLines","currentLineIndex","setCurrentLineIndex","audioRef","fadeOut","setFadeOut","current","Audio","volume","load","showNextLine","length","prev","timer","setTimeout","clearTimeout","delay","play","catch","err","console","warn","className","children","map","line","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/DroneTelemetryDashboard/frontend/src/components/BootScreen.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport './BootScreen.css';\r\n\r\nconst bootSequence = [\r\n  'Initializing Drone Command HQ...',\r\n  'Powering up sensors...',\r\n  'Loading Telemetry Core...',\r\n  'Establishing satellite uplink...',\r\n  'Activating visual interface...',\r\n  'System check complete...',\r\n  'Welcome, Commander.',\r\n];\r\n\r\nconst BootScreen = ({ onComplete }) => {\r\n  const [displayedLines, setDisplayedLines] = useState([]);\r\n  const [currentLineIndex, setCurrentLineIndex] = useState(0);\r\n  const audioRef = useRef(null);\r\n  const [fadeOut, setFadeOut] = useState(false);\r\n\r\n  useEffect(() => {\r\n    audioRef.current = new Audio('/sounds/boot.mp3');\r\n    audioRef.current.volume = 0.7;\r\n    audioRef.current.load();\r\n\r\n    const showNextLine = () => {\r\n      if (currentLineIndex < bootSequence.length) {\r\n        setDisplayedLines((prev) => [...prev, bootSequence[currentLineIndex]]);\r\n        setCurrentLineIndex((prev) => prev + 1);\r\n      }\r\n    };\r\n\r\n    if (currentLineIndex < bootSequence.length) {\r\n      const timer = setTimeout(showNextLine, 1300); // 1.3s per line\r\n      return () => clearTimeout(timer);\r\n    } else {\r\n      // After all lines shown\r\n      const delay = setTimeout(() => {\r\n        setFadeOut(true);\r\n        audioRef.current.play().catch((err) => console.warn('Autoplay blocked:', err));\r\n        setTimeout(() => {\r\n          onComplete();\r\n        }, 1000);\r\n      }, 800);\r\n      return () => clearTimeout(delay);\r\n    }\r\n  }, [currentLineIndex, onComplete]);\r\n\r\n  return (\r\n    <div className=\"boot-screen\">\r\n      {displayedLines.map((line, index) => (\r\n        <div key={index} className=\"boot-line typewriter glitch\" data-text={line}>\r\n          {line}\r\n        </div>\r\n      ))}\r\n      {fadeOut && <div className=\"fade-out\" />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BootScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}