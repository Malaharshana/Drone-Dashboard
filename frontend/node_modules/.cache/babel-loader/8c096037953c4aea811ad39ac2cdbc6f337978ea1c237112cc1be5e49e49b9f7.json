{"ast":null,"code":"var _jsxFileName = \"D:\\\\DroneTelemetryDashboard\\\\frontend\\\\src\\\\components\\\\BootScreen.jsx\",\n  _s = $RefreshSig$();\n// src/components/BootScreen.js\n\nimport React, { useEffect, useState } from 'react';\nimport { motion } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst bootSequence = ['Initializing Drone Command HQ...', 'Powering up sensors...', 'Loading Telemetry Core...', 'Establishing satellite uplink...', 'Activating visual interface...', 'System check complete...', 'Welcome, Commander.'];\nconst BootScreen = ({\n  onComplete\n}) => {\n  _s();\n  const [started, setStarted] = useState(false);\n  const [showLines, setShowLines] = useState([]);\n  const handleStart = async () => {\n    if (started) return;\n    setStarted(true);\n\n    // Play sound\n    const bootAudio = new Audio('/sounds/boot.mp3');\n    bootAudio.volume = 0.8;\n    try {\n      await bootAudio.play();\n    } catch (err) {\n      console.error('Boot sound play failed:', err);\n    }\n\n    // Show each line with delay\n    for (let i = 0; i < bootSequence.length; i++) {\n      await new Promise(resolve => setTimeout(resolve, 900));\n      setShowLines(prev => [...prev, bootSequence[i]]);\n    }\n\n    // Wait a little and then navigate\n    setTimeout(() => {\n      onComplete();\n    }, 1500);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: handleStart,\n    style: {\n      backgroundColor: 'black',\n      color: '#00ffe0',\n      fontFamily: 'Orbitron, monospace',\n      fontSize: '1.2rem',\n      height: '100vh',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      paddingLeft: '5vw',\n      cursor: started ? 'default' : 'pointer'\n    },\n    children: !started ? /*#__PURE__*/_jsxDEV(motion.div, {\n      initial: {\n        opacity: 0\n      },\n      animate: {\n        opacity: 1\n      },\n      transition: {\n        duration: 1\n      },\n      style: {\n        textShadow: '0 0 8px cyan'\n      },\n      children: \"Tap to Initiate Boot Sequence\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this) : showLines.map((line, index) => /*#__PURE__*/_jsxDEV(motion.div, {\n      initial: {\n        opacity: 0,\n        x: -40\n      },\n      animate: {\n        opacity: 1,\n        x: 0\n      },\n      transition: {\n        duration: 0.5\n      },\n      style: {\n        marginBottom: '0.9rem',\n        textShadow: '0 0 10px cyan'\n      },\n      children: line\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(BootScreen, \"XgUmC+UfQ1Qu8DHXY1XIZPnddXg=\");\n_c = BootScreen;\nexport default BootScreen;\nvar _c;\n$RefreshReg$(_c, \"BootScreen\");","map":{"version":3,"names":["React","useEffect","useState","motion","jsxDEV","_jsxDEV","bootSequence","BootScreen","onComplete","_s","started","setStarted","showLines","setShowLines","handleStart","bootAudio","Audio","volume","play","err","console","error","i","length","Promise","resolve","setTimeout","prev","onClick","style","backgroundColor","color","fontFamily","fontSize","height","display","flexDirection","justifyContent","paddingLeft","cursor","children","div","initial","opacity","animate","transition","duration","textShadow","fileName","_jsxFileName","lineNumber","columnNumber","map","line","index","x","marginBottom","_c","$RefreshReg$"],"sources":["D:/DroneTelemetryDashboard/frontend/src/components/BootScreen.jsx"],"sourcesContent":["// src/components/BootScreen.js\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst bootSequence = [\r\n  'Initializing Drone Command HQ...',\r\n  'Powering up sensors...',\r\n  'Loading Telemetry Core...',\r\n  'Establishing satellite uplink...',\r\n  'Activating visual interface...',\r\n  'System check complete...',\r\n  'Welcome, Commander.',\r\n];\r\n\r\nconst BootScreen = ({ onComplete }) => {\r\n  const [started, setStarted] = useState(false);\r\n  const [showLines, setShowLines] = useState([]);\r\n\r\n  const handleStart = async () => {\r\n    if (started) return;\r\n    setStarted(true);\r\n\r\n    // Play sound\r\n    const bootAudio = new Audio('/sounds/boot.mp3');\r\n    bootAudio.volume = 0.8;\r\n    try {\r\n      await bootAudio.play();\r\n    } catch (err) {\r\n      console.error('Boot sound play failed:', err);\r\n    }\r\n\r\n    // Show each line with delay\r\n    for (let i = 0; i < bootSequence.length; i++) {\r\n      await new Promise((resolve) => setTimeout(resolve, 900));\r\n      setShowLines((prev) => [...prev, bootSequence[i]]);\r\n    }\r\n\r\n    // Wait a little and then navigate\r\n    setTimeout(() => {\r\n      onComplete();\r\n    }, 1500);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      onClick={handleStart}\r\n      style={{\r\n        backgroundColor: 'black',\r\n        color: '#00ffe0',\r\n        fontFamily: 'Orbitron, monospace',\r\n        fontSize: '1.2rem',\r\n        height: '100vh',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        paddingLeft: '5vw',\r\n        cursor: started ? 'default' : 'pointer',\r\n      }}\r\n    >\r\n      {!started ? (\r\n        <motion.div\r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: 1 }}\r\n          transition={{ duration: 1 }}\r\n          style={{ textShadow: '0 0 8px cyan' }}\r\n        >\r\n          Tap to Initiate Boot Sequence\r\n        </motion.div>\r\n      ) : (\r\n        showLines.map((line, index) => (\r\n          <motion.div\r\n            key={index}\r\n            initial={{ opacity: 0, x: -40 }}\r\n            animate={{ opacity: 1, x: 0 }}\r\n            transition={{ duration: 0.5 }}\r\n            style={{ marginBottom: '0.9rem', textShadow: '0 0 10px cyan' }}\r\n          >\r\n            {line}\r\n          </motion.div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BootScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}