{"ast":null,"code":"// src/api/socket.js\n\nlet listeners = [];\nlet intervalId = null;\nfunction getRandom(min, max) {\n  return +(Math.random() * (max - min) + min).toFixed(2);\n}\nfunction generateTelemetryData() {\n  return {\n    battery: getRandom(0, 12),\n    altitude: getRandom(10, 0),\n    temperature: getRandom(20, 70),\n    roll: getRandom(-45, 45),\n    pitch: getRandom(-45, 45),\n    yaw: getRandom(0, 360),\n    gps: {\n      lat: getRandom(11.00, 11.03),\n      lon: getRandom(76.94, 76.97),\n      alt: getRandom(10, 100)\n    },\n    connection: [\"Excellent\", \"Good\", \"Poor\", \"No Signal\"][Math.floor(Math.random() * 4)],\n    timestamp: new Date().toISOString()\n  };\n}\nfunction startTelemetryInterval() {\n  if (intervalId) clearInterval(intervalId); // Clear previous if any\n\n  intervalId = setInterval(() => {\n    const newData = generateTelemetryData();\n    listeners.forEach(cb => cb(newData));\n  }, 3000); // ✅ 7 seconds here\n}\nexport function subscribeToTelemetry(callback) {\n  listeners.push(callback);\n  if (!intervalId) {\n    startTelemetryInterval();\n  }\n  return () => {\n    listeners = listeners.filter(cb => cb !== callback);\n    if (listeners.length === 0 && intervalId) {\n      clearInterval(intervalId);\n      intervalId = null;\n    }\n  };\n}","map":{"version":3,"names":["listeners","intervalId","getRandom","min","max","Math","random","toFixed","generateTelemetryData","battery","altitude","temperature","roll","pitch","yaw","gps","lat","lon","alt","connection","floor","timestamp","Date","toISOString","startTelemetryInterval","clearInterval","setInterval","newData","forEach","cb","subscribeToTelemetry","callback","push","filter","length"],"sources":["D:/DroneTelemetryDashboard/frontend/src/api/socket.js"],"sourcesContent":["// src/api/socket.js\r\n\r\nlet listeners = [];\r\nlet intervalId = null;\r\n\r\nfunction getRandom(min, max) {\r\n  return +(Math.random() * (max - min) + min).toFixed(2);\r\n}\r\n\r\nfunction generateTelemetryData() {\r\n  return {\r\n    battery: getRandom(0, 12),\r\n    altitude: getRandom(10, 0),\r\n    temperature: getRandom(20, 70),\r\n    roll: getRandom(-45, 45),\r\n    pitch: getRandom(-45, 45),\r\n    yaw: getRandom(0, 360),\r\n    gps: {\r\n      lat: getRandom(11.00, 11.03),\r\n      lon: getRandom(76.94, 76.97),\r\n      alt: getRandom(10, 100)\r\n    },\r\n    connection: [\"Excellent\", \"Good\", \"Poor\", \"No Signal\"][\r\n      Math.floor(Math.random() * 4)\r\n    ],\r\n    timestamp: new Date().toISOString()\r\n  };\r\n}\r\n\r\nfunction startTelemetryInterval() {\r\n  if (intervalId) clearInterval(intervalId); // Clear previous if any\r\n\r\n  intervalId = setInterval(() => {\r\n    const newData = generateTelemetryData();\r\n    listeners.forEach((cb) => cb(newData));\r\n  }, 3000); // ✅ 7 seconds here\r\n}\r\n\r\nexport function subscribeToTelemetry(callback) {\r\n  listeners.push(callback);\r\n\r\n  if (!intervalId) {\r\n    startTelemetryInterval();\r\n  }\r\n\r\n  return () => {\r\n    listeners = listeners.filter((cb) => cb !== callback);\r\n\r\n    if (listeners.length === 0 && intervalId) {\r\n      clearInterval(intervalId);\r\n      intervalId = null;\r\n    }\r\n  };\r\n}\r\n"],"mappings":"AAAA;;AAEA,IAAIA,SAAS,GAAG,EAAE;AAClB,IAAIC,UAAU,GAAG,IAAI;AAErB,SAASC,SAASA,CAACC,GAAG,EAAEC,GAAG,EAAE;EAC3B,OAAO,CAAC,CAACC,IAAI,CAACC,MAAM,CAAC,CAAC,IAAIF,GAAG,GAAGD,GAAG,CAAC,GAAGA,GAAG,EAAEI,OAAO,CAAC,CAAC,CAAC;AACxD;AAEA,SAASC,qBAAqBA,CAAA,EAAG;EAC/B,OAAO;IACLC,OAAO,EAAEP,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC;IACzBQ,QAAQ,EAAER,SAAS,CAAC,EAAE,EAAE,CAAC,CAAC;IAC1BS,WAAW,EAAET,SAAS,CAAC,EAAE,EAAE,EAAE,CAAC;IAC9BU,IAAI,EAAEV,SAAS,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC;IACxBW,KAAK,EAAEX,SAAS,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC;IACzBY,GAAG,EAAEZ,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC;IACtBa,GAAG,EAAE;MACHC,GAAG,EAAEd,SAAS,CAAC,KAAK,EAAE,KAAK,CAAC;MAC5Be,GAAG,EAAEf,SAAS,CAAC,KAAK,EAAE,KAAK,CAAC;MAC5BgB,GAAG,EAAEhB,SAAS,CAAC,EAAE,EAAE,GAAG;IACxB,CAAC;IACDiB,UAAU,EAAE,CAAC,WAAW,EAAE,MAAM,EAAE,MAAM,EAAE,WAAW,CAAC,CACpDd,IAAI,CAACe,KAAK,CAACf,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAC9B;IACDe,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;EACpC,CAAC;AACH;AAEA,SAASC,sBAAsBA,CAAA,EAAG;EAChC,IAAIvB,UAAU,EAAEwB,aAAa,CAACxB,UAAU,CAAC,CAAC,CAAC;;EAE3CA,UAAU,GAAGyB,WAAW,CAAC,MAAM;IAC7B,MAAMC,OAAO,GAAGnB,qBAAqB,CAAC,CAAC;IACvCR,SAAS,CAAC4B,OAAO,CAAEC,EAAE,IAAKA,EAAE,CAACF,OAAO,CAAC,CAAC;EACxC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;AACZ;AAEA,OAAO,SAASG,oBAAoBA,CAACC,QAAQ,EAAE;EAC7C/B,SAAS,CAACgC,IAAI,CAACD,QAAQ,CAAC;EAExB,IAAI,CAAC9B,UAAU,EAAE;IACfuB,sBAAsB,CAAC,CAAC;EAC1B;EAEA,OAAO,MAAM;IACXxB,SAAS,GAAGA,SAAS,CAACiC,MAAM,CAAEJ,EAAE,IAAKA,EAAE,KAAKE,QAAQ,CAAC;IAErD,IAAI/B,SAAS,CAACkC,MAAM,KAAK,CAAC,IAAIjC,UAAU,EAAE;MACxCwB,aAAa,CAACxB,UAAU,CAAC;MACzBA,UAAU,GAAG,IAAI;IACnB;EACF,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}