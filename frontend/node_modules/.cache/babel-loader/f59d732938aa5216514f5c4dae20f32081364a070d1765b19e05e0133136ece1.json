{"ast":null,"code":"var _jsxFileName = \"D:\\\\DroneTelemetryDashboard\\\\frontend\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { Box, Typography, Chip, Card, CardContent } from '@mui/material';\nimport TopBar from '../components/TopBar';\nimport TelemetryPanel from '../components/TelemetryPanel';\nimport MapView from '../components/MapView';\nimport { subscribeToTelemetry } from '../api/socket';\nimport ConnectionInfoPanel from '../components/ConnectionInfoPanel';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [telemetry, setTelemetry] = useState(null);\n  const [alerts, setAlerts] = useState({\n    battery: null,\n    gps: null,\n    imu: null,\n    connection: null\n  });\n  const [batteryHistory, setBatteryHistory] = useState([]);\n  const [temperatureHistory, setTemperatureHistory] = useState([]);\n  const [altitudeHistory, setAltitudeHistory] = useState([]);\n  const [imuHistory, setImuHistory] = useState([]);\n  const lastGps = useRef(null);\n  const lastYaw = useRef(null);\n  const lastYawChangeTime = useRef(Date.now());\n  const hasGpsFrozen = current => {\n    if (!lastGps.current) return false;\n    return lastGps.current.lat === current.lat && lastGps.current.lon === current.lon && lastGps.current.alt === current.alt;\n  };\n  const isYawErratic = currentYaw => {\n    const delta = Math.abs(currentYaw - (lastYaw.current || 0));\n    const now = Date.now();\n    if (delta > 120 && now - lastYawChangeTime.current < 1000) {\n      return true;\n    }\n    lastYawChangeTime.current = now;\n    return false;\n  };\n  useEffect(() => {\n    const unsubscribe = subscribeToTelemetry(incoming => {\n      setTelemetry(incoming);\n      const time = new Date().toLocaleTimeString();\n      setBatteryHistory(prev => [...prev.slice(-20), {\n        time,\n        value: incoming.battery\n      }]);\n      setTemperatureHistory(prev => [...prev.slice(-20), {\n        time,\n        value: incoming.temperature\n      }]);\n      setAltitudeHistory(prev => [...prev.slice(-20), {\n        time,\n        value: incoming.altitude\n      }]);\n      setImuHistory(prev => [...prev.slice(-20), {\n        time,\n        roll: incoming.roll,\n        pitch: incoming.pitch,\n        yaw: incoming.yaw\n      }]);\n      const newAlerts = {\n        battery: incoming.battery < 3.7 ? '⚠️ Battery Critical!' : null,\n        gps: hasGpsFrozen(incoming.gps) ? '📡 Lost Signal: GPS Frozen' : null,\n        imu: isYawErratic(incoming.yaw) ? '⚠️ Instability Detected' : null,\n        connection: incoming.connection === 'No Signal' ? '🚫 Connection Lost!' : null\n      };\n      setAlerts(newAlerts);\n      lastGps.current = incoming.gps;\n      lastYaw.current = incoming.yaw;\n    });\n    return () => unsubscribe();\n  }, []);\n  const chartData = {\n    batteryHistory,\n    temperatureHistory,\n    altitudeHistory,\n    imuHistory\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      backgroundColor: '#0f172a',\n      height: '100vh',\n      overflow: 'hidden'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TopBar, {\n      telemetry: telemetry\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        height: 'calc(100vh - 64px)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: '750px',\n          overflowY: 'auto',\n          borderRight: '1px solid #1e293b'\n        },\n        children: /*#__PURE__*/_jsxDEV(TelemetryPanel, {\n          telemetry: telemetry,\n          chartData: chartData,\n          alerts: alerts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          flexGrow: 2,\n          p: 5,\n          overflowY: 'auto'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          sx: {\n            mb: 2,\n            color: 'white'\n          },\n          children: \"\\uD83D\\uDDFA Drone Navigation & Tracking\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), telemetry && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: telemetry && /*#__PURE__*/_jsxDEV(ConnectionInfoPanel, {\n            telemetry: telemetry\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this)\n        }, void 0, false), /*#__PURE__*/_jsxDEV(MapView, {\n          telemetry: telemetry\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"LHoXVAmq3xkadbyryFqrazoiSoI=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Box","Typography","Chip","Card","CardContent","TopBar","TelemetryPanel","MapView","subscribeToTelemetry","ConnectionInfoPanel","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","telemetry","setTelemetry","alerts","setAlerts","battery","gps","imu","connection","batteryHistory","setBatteryHistory","temperatureHistory","setTemperatureHistory","altitudeHistory","setAltitudeHistory","imuHistory","setImuHistory","lastGps","lastYaw","lastYawChangeTime","Date","now","hasGpsFrozen","current","lat","lon","alt","isYawErratic","currentYaw","delta","Math","abs","unsubscribe","incoming","time","toLocaleTimeString","prev","slice","value","temperature","altitude","roll","pitch","yaw","newAlerts","chartData","sx","backgroundColor","height","overflow","children","fileName","_jsxFileName","lineNumber","columnNumber","display","width","overflowY","borderRight","flexGrow","p","variant","mb","color","_c","$RefreshReg$"],"sources":["D:/DroneTelemetryDashboard/frontend/src/pages/Home.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { Box, Typography, Chip, Card, CardContent } from '@mui/material';\r\nimport TopBar from '../components/TopBar';\r\nimport TelemetryPanel from '../components/TelemetryPanel';\r\nimport MapView from '../components/MapView';\r\nimport { subscribeToTelemetry } from '../api/socket';\r\nimport ConnectionInfoPanel from '../components/ConnectionInfoPanel';\r\n\r\n\r\nconst Home = () => {\r\n  const [telemetry, setTelemetry] = useState(null);\r\n  const [alerts, setAlerts] = useState({\r\n    battery: null,\r\n    gps: null,\r\n    imu: null,\r\n    connection: null,\r\n  });\r\n\r\n  const [batteryHistory, setBatteryHistory] = useState([]);\r\n  const [temperatureHistory, setTemperatureHistory] = useState([]);\r\n  const [altitudeHistory, setAltitudeHistory] = useState([]);\r\n  const [imuHistory, setImuHistory] = useState([]);\r\n\r\n  const lastGps = useRef(null);\r\n  const lastYaw = useRef(null);\r\n  const lastYawChangeTime = useRef(Date.now());\r\n\r\n  const hasGpsFrozen = (current) => {\r\n    if (!lastGps.current) return false;\r\n    return (\r\n      lastGps.current.lat === current.lat &&\r\n      lastGps.current.lon === current.lon &&\r\n      lastGps.current.alt === current.alt\r\n    );\r\n  };\r\n\r\n  const isYawErratic = (currentYaw) => {\r\n    const delta = Math.abs(currentYaw - (lastYaw.current || 0));\r\n    const now = Date.now();\r\n\r\n    if (delta > 120 && now - lastYawChangeTime.current < 1000) {\r\n      return true;\r\n    }\r\n\r\n    lastYawChangeTime.current = now;\r\n    return false;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = subscribeToTelemetry((incoming) => {\r\n      setTelemetry(incoming);\r\n      const time = new Date().toLocaleTimeString();\r\n\r\n      setBatteryHistory((prev) => [...prev.slice(-20), { time, value: incoming.battery }]);\r\n      setTemperatureHistory((prev) => [...prev.slice(-20), { time, value: incoming.temperature }]);\r\n      setAltitudeHistory((prev) => [...prev.slice(-20), { time, value: incoming.altitude }]);\r\n      setImuHistory((prev) => [...prev.slice(-20), {\r\n        time,\r\n        roll: incoming.roll,\r\n        pitch: incoming.pitch,\r\n        yaw: incoming.yaw,\r\n      }]);\r\n\r\n      const newAlerts = {\r\n        battery: incoming.battery < 3.7 ? '⚠️ Battery Critical!' : null,\r\n        gps: hasGpsFrozen(incoming.gps) ? '📡 Lost Signal: GPS Frozen' : null,\r\n        imu: isYawErratic(incoming.yaw) ? '⚠️ Instability Detected' : null,\r\n        connection: incoming.connection === 'No Signal' ? '🚫 Connection Lost!' : null,\r\n      };\r\n\r\n      setAlerts(newAlerts);\r\n      lastGps.current = incoming.gps;\r\n      lastYaw.current = incoming.yaw;\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  const chartData = {\r\n    batteryHistory,\r\n    temperatureHistory,\r\n    altitudeHistory,\r\n    imuHistory,\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ backgroundColor: '#0f172a', height: '100vh', overflow: 'hidden' }}>\r\n      <TopBar telemetry={telemetry} />\r\n      <Box sx={{ display: 'flex', height: 'calc(100vh - 64px)' }}>\r\n        \r\n        {/* Left Panel */}\r\n        <Box sx={{ width: '750px', overflowY: 'auto', borderRight: '1px solid #1e293b' }}>\r\n          <TelemetryPanel telemetry={telemetry} chartData={chartData} alerts={alerts} />\r\n        </Box>\r\n\r\n        {/* Right Panel */}\r\n        <Box sx={{ flexGrow: 2, p: 5, overflowY: 'auto' }}>\r\n          <Typography variant=\"h5\" sx={{ mb: 2, color: 'white' }}>🗺 Drone Navigation & Tracking</Typography>\r\n\r\n          {telemetry && (\r\n            <>\r\n              {telemetry && (\r\n                <ConnectionInfoPanel telemetry={telemetry} />\r\n)}\r\n\r\n            </>\r\n          )}\r\n\r\n          <MapView telemetry={telemetry} />\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}